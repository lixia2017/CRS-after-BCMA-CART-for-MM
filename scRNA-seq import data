##scRNA-seq
# Alignment and generates cells × genes raw counts matrix
~/software/10X/cellranger-3.0.0/cellranger count --id=FHJ_S1 --transcriptome=~/software/10X/refdata-cellranger-GRCh38-3.0.0 --fastqs=/mnt/FHJ/S1 --localcores=128 --localmem=128 

##
The codes for import 4 paitents data(one patient pipelien as a example)
##S1
S1_dir <- "GEX5_filtered_feature_bc_matrix/"
S1.barcode.path <- paste0(S1_dir, "barcodes.tsv.gz")
S1.features.path <- paste0(S1_dir, "features.tsv.gz")
S1.matrix.path <- paste0(S1_dir, "matrix.mtx.gz")

S1.mat <- readMM(file = S1.matrix.path)
S1.feature.names = read.delim(S1.features.path,header = FALSE,stringsAsFactors = FALSE)
S1.barcode.names = read.delim(S1.barcode.path,header = FALSE,stringsAsFactors = FALSE)

colnames(S1.mat) = paste("S1_",S1.barcode.names$V1,sep="")
rownames(S1.mat) = S1.feature.names$V2

dim(S1.mat)
S1.mat[1:30,1:30]

##S2
S2_dir <- "GEX6_filtered_feature_bc_matrix/"
S2.barcode.path <- paste0(S2_dir, "barcodes.tsv.gz")
S2.features.path <- paste0(S2_dir, "features.tsv.gz")
S2.matrix.path <- paste0(S2_dir, "matrix.mtx.gz")
S2.mat <- readMM(file = S2.matrix.path)
S2.feature.names = read.delim(S2.features.path, header = FALSE,stringsAsFactors = FALSE)

S2.barcode.names = read.delim(S2.barcode.path, header = FALSE,stringsAsFactors = FALSE)
colnames(S2.mat) = paste("S2_",S2.barcode.names$V1,sep="")
rownames(S2.mat) = S2.feature.names$V2
dim(S2.mat)
S2.mat[1:30,1:30]

##S3
S3_dir <- "GEX7_filtered_feature_bc_matrix/"
S3.barcode.path <- paste0(S3_dir, "barcodes.tsv.gz")
S3.features.path <- paste0(S3_dir, "features.tsv.gz")
S3.matrix.path <- paste0(S3_dir, "matrix.mtx.gz")
S3.mat <- readMM(file = S3.matrix.path)
S3.feature.names = read.delim(S3.features.path, header = FALSE,stringsAsFactors = FALSE)

S3.barcode.names = read.delim(S3.barcode.path, header = FALSE,stringsAsFactors = FALSE)
colnames(S3.mat) = paste("S3_",S3.barcode.names$V1,sep="")
rownames(S3.mat) = S3.feature.names$V2

dim(S3.mat)
S3.mat[1:30,1:30]


##S4
S4_dir <- "GEX9_filtered_feature_bc_matrix/"
S4.barcode.path <- paste0(S4_dir, "barcodes.tsv.gz")
S4.features.path <- paste0(S4_dir, "features.tsv.gz")
S4.matrix.path <- paste0(S4_dir, "matrix.mtx.gz")
S4.mat <- readMM(file = S4.matrix.path)
S4.feature.names = read.delim(S4.features.path,header = FALSE,stringsAsFactors = FALSE)
S4.barcode.names = read.delim(S4.barcode.path,header = FALSE,stringsAsFactors = FALSE)
colnames(S4.mat) = paste("S4_",S4.barcode.names$V1,sep="")
rownames(S4.mat) = S4.feature.names$V2
dim(S4.mat)
S4.mat[1:30,1:30]

##S5
S5_dir <- "GEX1_filtered_feature_bc_matrix/"
S5.barcode.path <- paste0(S5_dir, "barcodes.tsv.gz")
S5.features.path <- paste0(S5_dir, "features.tsv.gz")
S5.matrix.path <- paste0(S5_dir, "matrix.mtx.gz")
S5.mat <- readMM(file = S5.matrix.path)
S5.feature.names = read.delim(S5.features.path,header = FALSE,stringsAsFactors = FALSE)
S5.barcode.names = read.delim(S5.barcode.path,header = FALSE,stringsAsFactors = FALSE)
colnames(S5.mat) = paste("S5_",S5.barcode.names$V1,sep="")
rownames(S5.mat) = S5.feature.names$V2
dim(S5.mat)
S5.mat[1:30,1:30]

##S6
S6_dir <- "GEX2_filtered_feature_bc_matrix/"
S6.barcode.path <- paste0(S6_dir, "barcodes.tsv.gz")
S6.features.path <- paste0(S6_dir, "features.tsv.gz")
S6.matrix.path <- paste0(S6_dir, "matrix.mtx.gz")
S6.mat <- readMM(file = S6.matrix.path)
S6.feature.names = read.delim(S6.features.path,header = FALSE,stringsAsFactors = FALSE)
S6.barcode.names = read.delim(S6.barcode.path,header = FALSE,stringsAsFactors = FALSE)
colnames(S6.mat) = paste("S6_",S6.barcode.names$V1,sep="")
rownames(S6.mat) = S6.feature.names$V2

dim(S6.mat)
S6.mat[1:30,1:30]

##S7
S7_dir <- "GEX4_filtered_feature_bc_matrix/"
S7.barcode.path <- paste0(S7_dir, "barcodes.tsv.gz")
S7.features.path <- paste0(S7_dir, "features.tsv.gz")
S7.matrix.path <- paste0(S7_dir, "matrix.mtx.gz")
S7.mat <- readMM(file = S7.matrix.path)
S7.feature.names = read.delim(S7.features.path,header = FALSE,stringsAsFactors = FALSE)
S7.barcode.names = read.delim(S7.barcode.path,header = FALSE,stringsAsFactors = FALSE)
colnames(S7.mat) = paste("S7_",S7.barcode.names$V1,sep="")
rownames(S7.mat) = S7.feature.names$V2
dim(S7.mat)
S7.mat[1:30,1:30]


##去除二细胞
library(scDblFinder)

p4_s1<-s1.mat
p4_s2<-s2.mat
p4_s3<-s3.mat
p4_s4<-s4.mat
p4_s5<-s5.mat
p4_s6<-s6.mat
p4_s7<-s7.mat

count22<-p4_s1
count23<-p4_s2
count24<-p4_s3
count25<-p4_s4
count26<-p4_s5
count27<-p4_s6
count28<-p4_s7

sce <-SingleCellExperiment(assays=list(counts=count22))
sce <- scDblFinder(sce, verbose=FALSE)
table(sce$scDblFinder.class)
doublecell_p4_s1<-sce

sce <-SingleCellExperiment(assays=list(counts=count23))
sce <- scDblFinder(sce, verbose=FALSE)
table(sce$scDblFinder.class)
doublecell_p4_s2<-sce

sce <-SingleCellExperiment(assays=list(counts=count24))
sce <- scDblFinder(sce, verbose=FALSE)
table(sce$scDblFinder.class)
doublecell_p4_s3<-sce


sce <-SingleCellExperiment(assays=list(counts=count25))
sce <- scDblFinder(sce, verbose=FALSE)
table(sce$scDblFinder.class)
doublecell_p4_s4<-sce

sce <-SingleCellExperiment(assays=list(counts=count26))
sce <- scDblFinder(sce, verbose=FALSE)
table(sce$scDblFinder.class)
doublecell_p4_s5<-sce

sce <-SingleCellExperiment(assays=list(counts=count27))
sce <- scDblFinder(sce, verbose=FALSE)
table(sce$scDblFinder.class)
doublecell_p4_s6<-sce

sce <-SingleCellExperiment(assays=list(counts=count28))
sce <- scDblFinder(sce, verbose=FALSE)
table(sce$scDblFinder.class)
doublecell_p4_s7<-sce

table(doublecell_p4_s1$scDblFinder.class)
table(doublecell_p4_s2$scDblFinder.class)
table(doublecell_p4_s3$scDblFinder.class)
table(doublecell_p4_s4$scDblFinder.class)
table(doublecell_p4_s5$scDblFinder.class)
table(doublecell_p4_s6$scDblFinder.class)
table(doublecell_p4_s7$scDblFinder.class)

##过滤双细胞
x<-as.data.frame(doublecell_p4_s1$scDblFinder.class)
colnames(x)<-"cell"
head(x)
p4_s1_filter<-p4_s1[,-c(which(x$cell=="doublet"))]
dim(p4_s1)
dim(p4_s1_filter)

x<-as.data.frame(doublecell_p4_s2$scDblFinder.class)
colnames(x)<-"cell"
head(x)
p4_s2_filter<-p4_s2[,-c(which(x$cell=="doublet"))]
dim(p4_s2)
dim(p4_s2_filter)

x<-as.data.frame(doublecell_p4_s3$scDblFinder.class)
colnames(x)<-"cell"
head(x)
p4_s3_filter<-p4_s3[,-c(which(x$cell=="doublet"))]
dim(p4_s3)
dim(p4_s3_filter)

x<-as.data.frame(doublecell_p4_s4$scDblFinder.class)
colnames(x)<-"cell"
head(x)
p4_s4_filter<-p4_s4[,-c(which(x$cell=="doublet"))]
dim(p4_s4)
dim(p4_s4_filter)

x<-as.data.frame(doublecell_p4_s5$scDblFinder.class)
colnames(x)<-"cell"
head(x)
p4_s5_filter<-p4_s5[,-c(which(x$cell=="doublet"))]
dim(p4_s5)
dim(p4_s5_filter)

x<-as.data.frame(doublecell_p4_s6$scDblFinder.class)
colnames(x)<-"cell"
head(x)
p4_s6_filter<-p4_s6[,-c(which(x$cell=="doublet"))]
dim(p4_s6)
dim(p4_s6_filter)

x<-as.data.frame(doublecell_p4_s7$scDblFinder.class)
colnames(x)<-"cell"
head(x)
p4_s7_filter<-p4_s7[,-c(which(x$cell=="doublet"))]
dim(p4_s7)
dim(p4_s7_filter)


###QC
p4_s1<-p4_s1_filter
p4_s2<-p4_s2_filter
p4_s3<-p4_s3_filter
p4_s4<-p4_s4_filter
p4_s5<-p4_s5_filter
p4_s6<-p4_s6_filter
p4_s7<-p4_s7_filter

##QC
p4_s1bj <- CreateSeuratObject(counts = p4_s1, project = "CART_DYH_10X_S1", min.cells = 3,min.features = 200)
p4_s1bj$condition <- "p4_s1"
p4_s1bj[["percent.mt"]] <- PercentageFeatureSet(p4_s1bj, pattern = "^MT-")
VlnPlot(object = p4_s1bj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

##
p4_s1bj <- subset(p4_s1bj, subset = nFeature_RNA > 200 & nFeature_RNA < 30000 & percent.mt < 20 & nCount_RNA>2000 & nCount_RNA<30000)
p4_s1bj <- NormalizeData(p4_s1bj, normalization.method = "LogNormalize", scale.factor = 10000)
p4_s1bj <- FindVariableFeatures(p4_s1bj, selection.method = "vst", nfeatures = 2000)


##QC
p4_s2bj <- CreateSeuratObject(counts = p4_s2, project = "CART_DYH_10X_S2", min.cells = 3,min.features = 200)
p4_s2bj$condition <- "p4_s2"
p4_s2bj[["percent.mt"]] <- PercentageFeatureSet(p4_s2bj, pattern = "^MT-")
VlnPlot(object = p4_s2bj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

##
p4_s2bj <- subset(p4_s2bj, subset = nFeature_RNA > 200 & nFeature_RNA < 30000 & percent.mt < 20& nCount_RNA>2000 & nCount_RNA<30000)
p4_s2bj <- NormalizeData(p4_s2bj, normalization.method = "LogNormalize", scale.factor = 10000)
p4_s2bj <- FindVariableFeatures(p4_s2bj, selection.method = "vst", nfeatures = 2000)

##QC
p4_s3bj <- CreateSeuratObject(counts = p4_s3, project = "CART_DYH_10X_S3", min.cells = 3,min.features = 200)
p4_s3bj$condition <- "p4_s3"
p4_s3bj[["percent.mt"]] <- PercentageFeatureSet(p4_s3bj, pattern = "^MT-")
VlnPlot(object = p4_s3bj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

##
p4_s3bj <- subset(p4_s3bj, subset = nFeature_RNA > 200 & nFeature_RNA < 30000 & percent.mt < 20 & nCount_RNA>2000 & nCount_RNA<30000)
p4_s3bj <- NormalizeData(p4_s3bj, normalization.method = "LogNormalize", scale.factor = 10000)
p4_s3bj <- FindVariableFeatures(p4_s3bj, selection.method = "vst", nfeatures = 2000)


##QC
p4_s4bj <- CreateSeuratObject(counts = p4_s4, project = "CART_DYH_10X_S4", min.cells = 3,min.features = 200)
p4_s4bj$condition <- "p4_s4"
p4_s4bj[["percent.mt"]] <- PercentageFeatureSet(p4_s4bj, pattern = "^MT-")
VlnPlot(object = p4_s4bj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

##
p4_s4bj <- subset(p4_s4bj, subset = nFeature_RNA > 200 & nFeature_RNA < 30000 & percent.mt < 20 & nCount_RNA>2000 & nCount_RNA<30000)
p4_s4bj <- NormalizeData(p4_s4bj, normalization.method = "LogNormalize", scale.factor = 10000)
p4_s4bj <- FindVariableFeatures(p4_s4bj, selection.method = "vst", nfeatures = 2000)

##QC
p4_s5bj <- CreateSeuratObject(counts = p4_s5, project = "CART_DYH_10X_S5", min.cells = 3,min.features = 200)
p4_s5bj$condition <- "p4_s5"
p4_s5bj[["percent.mt"]] <- PercentageFeatureSet(p4_s5bj, pattern = "^MT-")
VlnPlot(object = p4_s5bj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

##
p4_s5bj <- subset(p4_s5bj, subset = nFeature_RNA > 200 & nFeature_RNA < 30000 & percent.mt < 20 & nCount_RNA>2000 & nCount_RNA<30000)
p4_s5bj <- NormalizeData(p4_s5bj, normalization.method = "LogNormalize", scale.factor = 10000)
p4_s5bj <- FindVariableFeatures(p4_s5bj, selection.method = "vst", nfeatures = 2000)

##QC
p4_s6bj <- CreateSeuratObject(counts = p4_s6, project = "CART_DYH_10X_S6", min.cells = 3,min.features = 200)
p4_s6bj$condition <- "p4_s6"
p4_s6bj[["percent.mt"]] <- PercentageFeatureSet(p4_s6bj, pattern = "^MT-")
VlnPlot(object = p4_s6bj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

##
p4_s6bj <- subset(p4_s6bj, subset = nFeature_RNA > 200 & nFeature_RNA < 30000 & percent.mt < 20 & nCount_RNA>2000 & nCount_RNA<30000)
p4_s6bj <- NormalizeData(p4_s6bj, normalization.method = "LogNormalize", scale.factor = 10000)
p4_s6bj <- FindVariableFeatures(p4_s6bj, selection.method = "vst", nfeatures = 2000)

##QC
p4_s7bj <- CreateSeuratObject(counts = p4_s7, project = "CART_DYH_10X_S7", min.cells = 3,min.features = 200)
p4_s7bj$condition <- "p4_s7"
p4_s7bj[["percent.mt"]] <- PercentageFeatureSet(p4_s7bj, pattern = "^MT-")
VlnPlot(object = p4_s7bj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

##
p4_s7bj <- subset(p4_s7bj, subset = nFeature_RNA > 200 & nFeature_RNA < 30000 & percent.mt < 20 & nCount_RNA>2000 & nCount_RNA<30000)
p4_s7bj <- NormalizeData(p4_s7bj, normalization.method = "LogNormalize", scale.factor = 10000)
p4_s7bj <- FindVariableFeatures(p4_s7bj, selection.method = "vst", nfeatures = 2000)
